stages:
  - pre-build

variables:
  GOLANG_VERSION: "1.19-alpine"

.get-fact-project-info:
  image: private.nexus-registry.docker.local:8086/golang:${GOLANG_VERSION}
  stage: pre-build
  script:
    - echo "CI_PARENT_PROJECT_NAME=${MVN_PROJECT_NAME}" >> deploy.env
    - echo "CI_PARENT_PROJECT_GROUP_ID=${MVN_PROJECT_GROUP_ID}" >> deploy.env
    - echo "CI_PARENT_COMMIT_TAG=${CI_COMMIT_TAG}" >> deploy.env
    - echo "CI_PARENT_COMMIT_SHORT_SHA=${CI_COMMIT_SHORT_SHA}" >> deploy.env
    - echo "CI_PARENT_PIPELINE_PROJECT_ID=${CI_PROJECT_ID}" >> deploy.env
  artifacts:
    name: $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - deploy.env
    reports:
      dotenv: deploy.env

.gitlab-registry-get-fact-project-info:
  extends: .get-fact-project-info
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:${GOLANG_VERSION}
  
.build-golang:
  image: private.nexus-registry.docker.local:8086/golang:${GOLANG_VERSION}
  script:
    - apk add --no-cache git
    - go mod download
    - go mod tidy # install git required by install package
    - go build -o build/${CI_PARENT_PROJECT_NAME} main.go
  artifacts:
    name: $CI_PROJECT_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - build/*

.gitlab-registry-build-golang:
  extends: .build-golang
  image: ${CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX}/golang:${GOLANG_VERSION}